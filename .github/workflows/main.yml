name: github-pages
on:
  push:
    branches:
    # Limit to the `master` branch
    - master
  schedule:
    # Run hourly
    - cron:  '0 * * * *'
jobs:
  github-pages:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Generate GitHub Pages
      run: |
        set -x
        # Configure Git for the push from the workflow to the repository
        git config --global user.email "tomas@hubelbauer.net"
        git config --global user.name "Tomas Hubelbauer"
        # Check out the `master` branch because by default GitHub Actions checks out detached HEAD
        git checkout master
        # Search for .NET repositories with more stars than IS4A where the total + 1 will be the IS4A leaderboard position
        npm install
        npm start
        # Find the old position before staging the new one
        oldPosition=$(git show :data.json | jq .position)
        newPosition=$(cat data.json | jq .position)
        oldGap=$(git show :data.json | jq .gap)
        newGap=$(cat data.json | jq .gap)
        stars=$(cat data.json | jq .stars)
        # Add generated GitHub Pages to Git stage
        git add data.json
        # Reset unstaged changes to prevent `git commit` from yelling if there's changes outside of `docs`
        git checkout -- .
        # Commit the changes to the Git repository to deploy GitHub Pages (if any)
        if git diff-index --quiet HEAD --; then
          exit
        fi
        git commit -m "Generate GitHub Pages"
        # Authenticate with GitHub using the default integration PAT (this one won't deploy GitHub Pages)
        git remote set-url origin https://tomashubelbauer:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}
        # Pull before pushing to integrate fast forward changes if any
        git pull
        # Push the changes to GitHub
        git push
        # Create a release if the position has changed
        if [ $newPosition != $oldPosition ]
        then
          # Create a GitHub release for this leaderboard position
          curl -f -X POST -H "Authorization: token ${{secrets.GITHUB_PAGES_PAT}}" "https://api.github.com/repos/${{github.repository}}/releases" -d '{"tag_name":"'$(date -Iseconds | sed -r 's/[:+]/-/g')$(cat data.txt)'", "name": "#'$newPosition'", "body": "Gap: '$newGap'"}'
        fi
